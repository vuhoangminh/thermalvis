cmake_minimum_required(VERSION 2.8 FATAL_ERROR)
SET_PROPERTY(GLOBAL PROPERTY TARGET_SUPPORTS_SHARED_LIBS TRUE)

# Flags necessary to get Managed Code functioning for Windows-Optris demo
SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /clr")
STRING (REGEX REPLACE "/RTC1" "" CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG}")
STRING (REGEX REPLACE "/EHsc" "" CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS}")

IF(WIN32 OR win64)
	SET(CMAKE_FIND_LIBRARY_SUFFIXES .lib .dll)
ELSE()
	SET(CMAKE_FIND_LIBRARY_SUFFIXES .a)
	
	FIND_LIBRARY(LIBVA_LIBRARY NAMES va PATHS ${SEARCH_LIBRARY_PATHS})
	if(NOT LIBVA_LIBRARY)
	  message(FATAL_ERROR "libva library is missing")
	endif()

	FIND_LIBRARY(LIBAVFORMAT_LIBRARY NAMES avformat PATHS ${SEARCH_LIBRARY_PATHS})
	if(NOT LIBAVFORMAT_LIBRARY)
	  message(FATAL_ERROR "libavformat library is missing")
	endif()

	FIND_LIBRARY(LIBAVCODEC_LIBRARY NAMES avcodec PATHS ${SEARCH_LIBRARY_PATHS})
	if(NOT LIBAVCODEC_LIBRARY)
	  message(FATAL_ERROR "libavcodec library is missing")
	endif()

	FIND_LIBRARY(LIBAVUTIL_LIBRARY NAMES avutil PATHS ${SEARCH_LIBRARY_PATHS})
	if(NOT LIBAVUTIL_LIBRARY)
	  message(FATAL_ERROR "libavutil library is missing")
	endif()

	FIND_LIBRARY(LIBAVDEVICE_LIBRARY NAMES avdevice PATHS ${SEARCH_LIBRARY_PATHS})
	if(NOT LIBAVDEVICE_LIBRARY)
	  message(FATAL_ERROR "libavdevice library is missing")
	endif()

	FIND_LIBRARY(LIBSWSCALE_LIBRARY NAMES swscale PATHS ${SEARCH_LIBRARY_PATHS})
	if(NOT LIBSWSCALE_LIBRARY)
	  message(FATAL_ERROR "libswscale library is missing")
	endif()
	
ENDIF()
 
project(streamer)

set (ADDITIONAL_LIBS thermalvis)

FILE(GLOB FLOW_HEADERS include/*.h*)
FILE(GLOB FLOW_SOURCES src/*.cpp)

INCLUDE_DIRECTORIES(include)
INCLUDE_DIRECTORIES("../../include")

IF(NOT(WIN32 OR win64))
	INCLUDE_DIRECTORIES("../../cfg/cpp/thermalvis/")
	LIST(APPEND ADDITIONAL_LIBS ${LIBVA_LIBRARY} ${LIBAVFORMAT_LIBRARY} ${LIBAVCODEC_LIBRARY} ${LIBAVUTIL_LIBRARY} ${LIBAVDEVICE_LIBRARY} ${LIBSWSCALE_LIBRARY})
ENDIF()

IF (NOT ("${_OpenCV_LIB_PATH}" STREQUAL ""))
	LINK_DIRECTORIES(${_OpenCV_LIB_PATH})
ENDIF()

LIST(APPEND ADDITIONAL_LIBS ${OpenCV_LIBRARIES})

IF(WIN32 OR win64)
	LIST(APPEND ADDITIONAL_LIBS ${Boost_LIBRARIES})
ENDIF()

SET(LIBRARY_NAME "thermalvis_streamer")
ADD_LIBRARY(${LIBRARY_NAME} ${FLOW_SOURCES} ${FLOW_HEADERS} )
TARGET_LINK_LIBRARIES(${LIBRARY_NAME} ${OpenCV_LIBS} ${ADDITIONAL_LIBS})
SET_TARGET_PROPERTIES(${LIBRARY_NAME} PROPERTIES COMPILE_FLAGS ${THERMALVIS_COMPILE_FLAGS})
